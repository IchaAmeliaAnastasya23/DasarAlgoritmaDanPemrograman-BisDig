# -*- coding: utf-8 -*-
"""Tugas sebelumUTS

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11NOhLc2lxHOjpcBelGAy1EoHbyKXJock

Nama : Icha Amelia Anastasya
NIM 24110310040
2B Bisnis digital
ALGORITMA DAN PEMORGRAMAN

1) Studi Kasus:
Anda diminta membuat fungsi untuk menghitung faktorial dari suatu bilangan menggunakan metode rekursif.
Pertanyaan:
Jelaskan manfaat penggunaan fungsi dan bagaimana rekursi bekerja dalam menghitung faktorial. Buatlah program Python yang menggunakan fungsi rekursif untuk menghitung faktorial dari angka yang dimasukkan.

# Manfaat Penggunaan Fungsi:

1. Modularitas: Memecah program menjadi bagian-bagian kecil yang lebih mudah dikelola
2. Reusability: Dapat digunakan kembali tanpa menulis ulang kode
3. Abstraksi: Menyembunyikan kompleksitas implementasi
4. Readability: Membuat kode lebih mudah dibaca dan dipahami

# Cara Kerja Rekursi:

Rekursi adalah teknik di mana fungsi memanggil dirinya sendiri. Dalam menghitung faktorial:

1. Fungsi akan memanggil dirinya sendiri dengan nilai yang lebih kecil
2. Proses berlanjut hingga mencapai base case (n = 0 atau 1)
3. Kemudian hasilnya dihitung mundur melalui tumpukan pemanggilan

2) Studi Kasus:
Seorang guru ingin membuat sistem input nilai 5 siswa dan mencari nilai tertinggi.
Pertanyaan:
Jelaskan penggunaan perulangan dan array dalam kasus ini. Buat program Python untuk menerima input nilai ke dalam list dan menampilkan nilai tertinggi serta siswa ke berapa yang mendapatkannya.

# Pemjelasan penggunaan perulangan dan array
1) Menggunakan array list : Digunakan untuk menyimpan nilai siswa secara terstruktur
2) Selanjutnya Perulangan menggunakan foor loop ( Jumlah yang diketahui )  dan while loop ( Validasi ) untuk menginput nilai secara otomatis.
3) Selanjutnya mencari nilai tertinggi menggunakan max() dan index ()
4) Terakhir output hasil untuk menghasilkan nilai tertinggi siswa yang mendapatkannya.

3) Studi Kasus:
Dalam sistem e-commerce, pelanggan mendapatkan diskon 10% jika belanja di atas Rp500.000.
Pertanyaan:
Jelaskan bagaimana struktur kontrol percabangan digunakan untuk logika pemberian diskon. Buatlah program yang menghitung total bayar setelah diskon jika syarat terpenuhi.

sistem diskon e-commerce menggunakan percabangan (if-else), dilengkapi analogi, contoh kode Python, dan ilustrasi proses
Sistem ini memberikan diskon 10% jika total belanja pelanggan melebihi Rp500.000.
Komponen utama:
1. Input: Total belanja (angka)
2. Proses: Cek kondisi belanja > Rp500.000
3. Output: Total akhir setelah diskon (jika ada)

Real Life Example
Belanja Rp500.000 → Dapet diskon Rp50.000 → Bayar Rp450.000
Kasus 2:
Belanja Rp450.000 → Gak dapet diskon → Bayar Rp450.000
jadi, jika total belanja nya besar dapat potongan dan jika totalnya kecil dapat potongannya normal.
"""

def faktorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * faktorial(n-1)

# Input dari user
angka = int(input("Masukkan bilangan untuk dihitung faktorialnya: "))
print(f"Faktorial dari {angka} adalah {faktorial(angka)}")

nilai_siswa = []

# Input nilai 5 siswa
for i in range(5):
    nilai = float(input(f"Masukkan nilai siswa ke-{i+1}: "))
    nilai_siswa.append(nilai)

# Mencari nilai tertinggi
nilai_tertinggi = max(nilai_siswa)
index_siswa = nilai_siswa.index(nilai_tertinggi) + 1

print(f"Nilai tertinggi adalah {nilai_tertinggi} diperoleh oleh siswa ke-{index_siswa}")

# Input total belanja dengan validasi
while True:
    try:
        total_belanja = float(input("Total belanja: Rp"))
        if total_belanja >= 0:
            break
        else:
            print("Total tidak boleh negatif!")
    except ValueError:
        print("Masukkan angka yang valid!")

# Logika diskon
if total_belanja > 500000:
    diskon = total_belanja * 0.1
    total_bayar = total_belanja - diskon
    print(f"\nSelamat! Anda dapat diskon 10%")
    print(f"Diskon: Rp{diskon:,.2f}")
else:
    total_bayar = total_belanja
    print("\nBelanja kembali untuk dapat diskon 10%!")

# Format output dengan separator ribuan
print(f"Total belanja: Rp{total_belanja:,.2f}")
print(f"Total bayar: Rp{total_bayar:,.2f}")

nilai_siswa = []

# Input nilai menggunakan perulangan
for i in range(5):
    while True:
        try:
            nilai = float(input(f"Nilai siswa ke-{i+1}: "))
            if 0 <= nilai <= 100:  # Validasi nilai
                nilai_siswa.append(nilai)
                break
            else:
                print("Nilai harus antara 0-100!")
        except ValueError:
            print("Masukkan angka yang valid!")

# Mencari nilai tertinggi dan indeksnya
nilai_tertinggi = -1
indeks_tertinggi = -1

for indeks, nilai in enumerate(nilai_siswa):
    if nilai > nilai_tertinggi:
        nilai_tertinggi = nilai
        indeks_tertinggi = indeks

# Output hasil
print(f"\nNilai tertinggi: {nilai_tertinggi}")
print(f"Diraih oleh siswa ke-{indeks_tertinggi + 1}")